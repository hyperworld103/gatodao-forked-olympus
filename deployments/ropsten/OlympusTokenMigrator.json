{
  "address": "0x89C2C99B4714EBc25BA47AaB4082B16a50EDCd92",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oldOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldsOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldTreasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldStaking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldwsOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sushi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uni",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IOlympusAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Defunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "staking",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "Migrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "block",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "end",
          "type": "uint256"
        }
      ],
      "name": "TimelockStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_to",
          "type": "uint8"
        }
      ],
      "name": "bridgeBack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "reserve",
          "type": "address"
        }
      ],
      "name": "defund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gOHM",
      "outputs": [
        {
          "internalType": "contract IgOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_from",
          "type": "uint8"
        },
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_to",
          "type": "uint8"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OlympusTokenMigrator.TYPE",
          "name": "_to",
          "type": "uint8"
        }
      ],
      "name": "migrateAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTreasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newStaking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newsOHM",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        }
      ],
      "name": "migrateContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "sushi",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minB",
          "type": "uint256"
        }
      ],
      "name": "migrateLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "migrateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOHM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newStaking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newTreasury",
      "outputs": [
        {
          "internalType": "contract ITreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ohmMigrated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldOHM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldStaking",
      "outputs": [
        {
          "internalType": "contract IStakingV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldTreasury",
      "outputs": [
        {
          "internalType": "contract ITreasuryV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldsOHM",
      "outputs": [
        {
          "internalType": "contract IsOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldwsOHM",
      "outputs": [
        {
          "internalType": "contract IwsOHM",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IOlympusAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gOHM",
          "type": "address"
        }
      ],
      "name": "setgOHM",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTimelock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushiRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb02ca0f20e1cfdda58ca40afa006de44f5c1e5c5105ac7ade2ef261642b00778",
  "receipt": {
    "to": null,
    "from": "0xC45d45b54045074Ed12d1Fe127f714f8aCE46f8c",
    "contractAddress": "0x89C2C99B4714EBc25BA47AaB4082B16a50EDCd92",
    "transactionIndex": 4,
    "gasUsed": "3328318",
    "logsBloom": "0x
    "blockHash": "0xbf23f944ddefa2acd59596d8ddecd26dbff4aebdfa7fa4b6ecd3a184e0f8c55c",
    "transactionHash": "0xb02ca0f20e1cfdda58ca40afa006de44f5c1e5c5105ac7ade2ef261642b00778",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 11614217,
        "transactionHash": "0xb02ca0f20e1cfdda58ca40afa006de44f5c1e5c5105ac7ade2ef261642b00778",
        "address": "0x89C2C99B4714EBc25BA47AaB4082B16a50EDCd92",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad",
          "0x0000000000000000000000001066620ae90cab648ff40843a2511314702ff293"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xbf23f944ddefa2acd59596d8ddecd26dbff4aebdfa7fa4b6ecd3a184e0f8c55c"
      }
    ],
    "blockNumber": 11614217,
    "cumulativeGasUsed": "3487985",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC0b491daBf3709Ee5Eb79E603D73289Ca6060932",
    "0x1Fecda1dE7b6951B248C0B62CaeBD5BAbedc2084",
    "0x0d722D813601E48b7DAcb2DF9bae282cFd98c6E7",
    "0xC5d3318C0d74a72cD7C55bdf844e24516796BaB2",
    "0xe73384f11Bb748Aa0Bc20f7b02958DF573e6E2ad",
    "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0",
    "0x1066620ae90cAb648Ff40843a2511314702ff293"
  ],
  "solcInputHash": "af09906ff75a3b20b77faf1e51b1ecf7",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldsOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oldwsOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uni\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IOlympusAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Defunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staking\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"Migrated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"block\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"TimelockStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_to\",\"type\":\"uint8\"}],\"name\":\"bridgeBack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"}],\"name\":\"defund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gOHM\",\"outputs\":[{\"internalType\":\"contract IgOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_from\",\"type\":\"uint8\"},{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_to\",\"type\":\"uint8\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OlympusTokenMigrator.TYPE\",\"name\":\"_to\",\"type\":\"uint8\"}],\"name\":\"migrateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newStaking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newsOHM\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"migrateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"sushi\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minB\",\"type\":\"uint256\"}],\"name\":\"migrateLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOHM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newStaking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newTreasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ohmMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldOHM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldStaking\",\"outputs\":[{\"internalType\":\"contract IStakingV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldTreasury\",\"outputs\":[{\"internalType\":\"contract ITreasuryV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldsOHM\",\"outputs\":[{\"internalType\":\"contract IsOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldwsOHM\",\"outputs\":[{\"internalType\":\"contract IwsOHM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOlympusAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gOHM\",\"type\":\"address\"}],\"name\":\"setgOHM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimelock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniRouter\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"migrateLP(address,bool,address,uint256,uint256)\":{\"notice\":\"Migrate LP and pair with new OHM\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/migration/OlympusTokenMigrator.sol\":\"OlympusTokenMigrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa142440b0e1c51ece24b6d074ac883b34e1f33a2472773eeaaf4871875904d09\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOlympusAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity =0.7.5;\\n\\ninterface IOlympusAuthority {\\n    /* ========== EVENTS ========== */\\n    \\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);    \\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);    \\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);    \\n\\n    event GovernorPulled(address indexed from, address indexed to);\\n    event GuardianPulled(address indexed from, address indexed to);\\n    event PolicyPulled(address indexed from, address indexed to);\\n    event VaultPulled(address indexed from, address indexed to);\\n\\n    /* ========== VIEW ========== */\\n    \\n    function governor() external view returns (address);\\n    function guardian() external view returns (address);\\n    function policy() external view returns (address);\\n    function vault() external view returns (address);\\n}\",\"keccak256\":\"0xfa39300288697fadbeade51ca71b1ca7306136182238dd7f2d36149659084b53\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\n\\ninterface IOwnable {\\n  function owner() external view returns (address);\\n\\n  function renounceManagement() external;\\n  \\n  function pushManagement( address newOwner_ ) external;\\n  \\n  function pullManagement() external;\\n}\",\"keccak256\":\"0x67b482434e366a3ff98d5ea407a569399f331df2de8ea7e2a7f38af675057771\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IStaking.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IStaking {\\n    function stake(\\n        address _to,\\n        uint256 _amount,\\n        bool _rebasing,\\n        bool _claim\\n    ) external returns (uint256);\\n\\n    function claim(address _recipient, bool _rebasing) external returns (uint256);\\n\\n    function forfeit() external returns (uint256);\\n\\n    function toggleLock() external;\\n\\n    function unstake(\\n        address _to,\\n        uint256 _amount,\\n        bool _trigger,\\n        bool _rebasing\\n    ) external returns (uint256);\\n\\n    function wrap(address _to, uint256 _amount) external returns (uint256 gBalance_);\\n\\n    function unwrap(address _to, uint256 _amount) external returns (uint256 sBalance_);\\n\\n    function rebase() external;\\n\\n    function index() external view returns (uint256);\\n\\n    function contractBalance() external view returns (uint256);\\n\\n    function totalStaked() external view returns (uint256);\\n\\n    function supplyInWarmup() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc5481248b924479a867d252882a1be9573e4aefe3c7816045e1c0c25daacca70\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IStakingV1.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IStakingV1 {\\n    function unstake(uint256 _amount, bool _trigger) external;\\n\\n    function index() external view returns (uint256);\\n}\",\"keccak256\":\"0xfcf4c7e6dd88e5bc983821607cb208a1f41993f912ecaead1be0367cbc969382\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface ITreasury {\\n    function deposit(\\n        uint256 _amount,\\n        address _token,\\n        uint256 _profit\\n    ) external returns (uint256);\\n\\n    function withdraw(uint256 _amount, address _token) external;\\n\\n    function tokenValue(address _token, uint256 _amount) external view returns (uint256 value_);\\n\\n    function mint(address _recipient, uint256 _amount) external;\\n\\n    function manage(address _token, uint256 _amount) external;\\n\\n    function incurDebt(uint256 amount_, address token_) external;\\n\\n    function repayDebtWithReserve(uint256 amount_, address token_) external;\\n\\n    function excessReserves() external view returns (uint256);\\n\\n    function baseSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x3a7e171916da6bf9b28904c2adc6ede32896a841e7f7ede0ad60da6804659c56\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/ITreasuryV1.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface ITreasuryV1 {\\n    function withdraw(uint256 amount, address token) external;\\n    function manage(address token, uint256 amount) external;\\n    function valueOf(address token, uint256 amount) external view returns (uint256);\\n    function excessReserves() external view returns (uint256);\\n}\",\"keccak256\":\"0xbee103ce923ab57ff8dd25208b29e552044727a8a8ff21ca77e0b318b461a3d8\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IUniswapV2Router.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\ninterface IUniswapV2Router {\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function addLiquidity(\\n        address tokenA, address tokenB, uint amountADesired, uint amountBDesired, uint amountAMin, uint amountBMin, address to, uint deadline\\n        ) external returns (uint amountA, uint amountB, uint liquidity);\\n        \\n    function removeLiquidity(\\n        address tokenA, address tokenB, uint liquidity, uint amountAMin, uint amountBMin, address to, uint deadline\\n        ) external returns (uint amountA, uint amountB);\\n}\",\"keccak256\":\"0x1d8eebe1788bccefb6c6a418bf40b0c5216f123b7fe0c5929b238b6e7cc6ccdc\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IgOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IgOHM is IERC20 {\\n  function mint(address _to, uint256 _amount) external;\\n\\n  function burn(address _from, uint256 _amount) external;\\n\\n  function index() external view returns (uint256);\\n\\n  function balanceFrom(uint256 _amount) external view returns (uint256);\\n\\n  function balanceTo(uint256 _amount) external view returns (uint256);\\n\\n  function migrate( address _staking, address _sOHM ) external;\\n}\\n\",\"keccak256\":\"0xeb7c3ceab39317336737719fd8dd396d3051c3d56c308e43f29c4e1fee2e4a22\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IsOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\ninterface IsOHM is IERC20 {\\n    function rebase( uint256 ohmProfit_, uint epoch_) external returns (uint256);\\n\\n    function circulatingSupply() external view returns (uint256);\\n\\n    function gonsForBalance( uint amount ) external view returns ( uint );\\n\\n    function balanceForGons( uint gons ) external view returns ( uint );\\n\\n    function index() external view returns ( uint );\\n\\n    function toG(uint amount) external view returns (uint);\\n\\n    function fromG(uint amount) external view returns (uint);\\n\\n     function changeDebt(\\n        uint256 amount,\\n        address debtor,\\n        bool add\\n    ) external;\\n\\n    function debtBalances(address _address) external view returns (uint256);\\n\\n}\\n\",\"keccak256\":\"0x55bb60b5207acaf43087c8cdcaa197059ec251c5c0910db70d4d37e67e317aeb\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IwsOHM.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity >=0.7.5;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n// Old wsOHM interface\\ninterface IwsOHM is IERC20 {\\n  function wrap(uint256 _amount) external returns (uint256);\\n\\n  function unwrap(uint256 _amount) external returns (uint256);\\n\\n  function wOHMTosOHM(uint256 _amount) external view returns (uint256);\\n\\n  function sOHMTowOHM(uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x925f9ceee6247be4e174033d1185a722dba313b4f2a83149703fe51bb96706ff\",\"license\":\"AGPL-3.0\"},\"contracts/libraries/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport {IERC20} from \\\"../interfaces/IERC20.sol\\\";\\n\\n/// @notice Safe IERC20 and ETH transfer library that safely handles missing return values.\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/libraries/TransferHelper.sol)\\n/// Taken from Solmate\\nlibrary SafeERC20 {\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FROM_FAILED\\\");\\n    }\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.transfer.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"TRANSFER_FAILED\\\");\\n    }\\n\\n    function safeApprove(\\n        IERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(IERC20.approve.selector, to, amount)\\n        );\\n\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"APPROVE_FAILED\\\");\\n    }\\n\\n    function safeTransferETH(address to, uint256 amount) internal {\\n        (bool success, ) = to.call{value: amount}(new bytes(0));\\n\\n        require(success, \\\"ETH_TRANSFER_FAILED\\\");\\n    }\\n}\",\"keccak256\":\"0xbdd4f99088de7c23383b043055646de013b1312166a9bfa05e3995cdcf7ae022\",\"license\":\"AGPL-3.0-only\"},\"contracts/libraries/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.7.5;\\n\\n\\n// TODO(zx): Replace all instances of SafeMath with OZ implementation\\nlibrary SafeMath {\\n\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    // Only used in the  BondingCalculator.sol\\n    function sqrrt(uint256 a) internal pure returns (uint c) {\\n        if (a > 3) {\\n            c = a;\\n            uint b = add( div( a, 2), 1 );\\n            while (b < c) {\\n                c = b;\\n                b = div( add( div( a, b ), b), 2 );\\n            }\\n        } else if (a != 0) {\\n            c = 1;\\n        }\\n    }\\n\\n}\",\"keccak256\":\"0x45cfc2aa9d85df2add98d4e899d834c646e8ce7001b00ead65f07dbefbcebeef\",\"license\":\"AGPL-3.0\"},\"contracts/migration/OlympusTokenMigrator.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.7.5;\\n\\nimport \\\"../interfaces/IERC20.sol\\\";\\nimport \\\"../interfaces/IsOHM.sol\\\";\\nimport \\\"../interfaces/IwsOHM.sol\\\";\\nimport \\\"../interfaces/IgOHM.sol\\\";\\nimport \\\"../interfaces/ITreasury.sol\\\";\\nimport \\\"../interfaces/IStaking.sol\\\";\\nimport \\\"../interfaces/IOwnable.sol\\\";\\nimport \\\"../interfaces/IUniswapV2Router.sol\\\";\\nimport \\\"../interfaces/IStakingV1.sol\\\";\\nimport \\\"../interfaces/ITreasuryV1.sol\\\";\\n\\nimport \\\"../types/OlympusAccessControlled.sol\\\";\\n\\nimport \\\"../libraries/SafeMath.sol\\\";\\nimport \\\"../libraries/SafeERC20.sol\\\";\\n\\n\\ncontract OlympusTokenMigrator is OlympusAccessControlled {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IgOHM;\\n    using SafeERC20 for IsOHM;\\n    using SafeERC20 for IwsOHM;\\n\\n    /* ========== MIGRATION ========== */\\n\\n    event TimelockStarted(uint256 block, uint256 end);\\n    event Migrated(address staking, address treasury);\\n    event Funded(uint256 amount);\\n    event Defunded(uint256 amount);\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IERC20 public immutable oldOHM;\\n    IsOHM public immutable oldsOHM;\\n    IwsOHM public immutable oldwsOHM;\\n    ITreasuryV1 public immutable oldTreasury;\\n    IStakingV1 public immutable oldStaking;\\n\\n    IUniswapV2Router public immutable sushiRouter;\\n    IUniswapV2Router public immutable uniRouter;\\n\\n    IgOHM public gOHM;\\n    ITreasury public newTreasury;\\n    IStaking public newStaking;\\n    IERC20 public newOHM;\\n\\n    bool public ohmMigrated;\\n    bool public shutdown;\\n\\n    uint256 public immutable timelockLength;\\n    uint256 public timelockEnd;\\n\\n    uint256 public oldSupply;\\n\\n    constructor(\\n        address _oldOHM,\\n        address _oldsOHM,\\n        address _oldTreasury,\\n        address _oldStaking,\\n        address _oldwsOHM,\\n        address _sushi,\\n        address _uni,\\n        uint256 _timelock,\\n        address _authority\\n    ) OlympusAccessControlled(IOlympusAuthority(_authority)) {\\n        require(_oldOHM != address(0), \\\"Zero address: OHM\\\");\\n        oldOHM = IERC20(_oldOHM);\\n        require(_oldsOHM != address(0), \\\"Zero address: sOHM\\\");\\n        oldsOHM = IsOHM(_oldsOHM);\\n        require(_oldTreasury != address(0), \\\"Zero address: Treasury\\\");\\n        oldTreasury = ITreasuryV1(_oldTreasury);\\n        require(_oldStaking != address(0), \\\"Zero address: Staking\\\");\\n        oldStaking = IStakingV1(_oldStaking);\\n        require(_oldwsOHM != address(0), \\\"Zero address: wsOHM\\\");\\n        oldwsOHM = IwsOHM(_oldwsOHM);\\n        require(_sushi != address(0), \\\"Zero address: Sushi\\\");\\n        sushiRouter = IUniswapV2Router(_sushi);\\n        require(_uni != address(0), \\\"Zero address: Uni\\\");\\n        uniRouter = IUniswapV2Router(_uni);\\n        timelockLength = _timelock;\\n    }\\n\\n    /* ========== MIGRATION ========== */\\n\\n    enum TYPE {\\n        UNSTAKED,\\n        STAKED,\\n        WRAPPED\\n    }\\n\\n    // migrate OHMv1, sOHMv1, or wsOHM for OHMv2, sOHMv2, or gOHM\\n    function migrate(\\n        uint256 _amount,\\n        TYPE _from,\\n        TYPE _to\\n    ) external {\\n        require(!shutdown, \\\"Shut down\\\");\\n\\n        uint256 wAmount = oldwsOHM.sOHMTowOHM(_amount);\\n\\n        if (_from == TYPE.UNSTAKED) {\\n            require(ohmMigrated, \\\"Only staked until migration\\\");\\n            oldOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n        } else if (_from == TYPE.STAKED) {\\n            oldsOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n        } else {\\n            oldwsOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n            wAmount = _amount;\\n        }\\n\\n        if (ohmMigrated) {\\n            require(oldSupply >= oldOHM.totalSupply(), \\\"OHMv1 minted\\\");\\n            _send(wAmount, _to);\\n        } else {\\n            gOHM.mint(msg.sender, wAmount);\\n        }\\n    }\\n\\n    // migrate all olympus tokens held\\n    function migrateAll(TYPE _to) external {\\n        require(!shutdown, \\\"Shut down\\\");\\n\\n        uint256 ohmBal = 0;\\n        uint256 sOHMBal = oldsOHM.balanceOf(msg.sender);\\n        uint256 wsOHMBal = oldwsOHM.balanceOf(msg.sender);\\n\\n        if (oldOHM.balanceOf(msg.sender) > 0 && ohmMigrated) {\\n            ohmBal = oldOHM.balanceOf(msg.sender);\\n            oldOHM.safeTransferFrom(msg.sender, address(this), ohmBal);\\n        }\\n        if (sOHMBal > 0) {\\n            oldsOHM.safeTransferFrom(msg.sender, address(this), sOHMBal);\\n        }\\n        if (wsOHMBal > 0) {\\n            oldwsOHM.safeTransferFrom(msg.sender, address(this), wsOHMBal);\\n        }\\n\\n        uint256 wAmount = wsOHMBal.add(oldwsOHM.sOHMTowOHM(ohmBal.add(sOHMBal)));\\n        if (ohmMigrated) {\\n            require(oldSupply >= oldOHM.totalSupply(), \\\"OHMv1 minted\\\");\\n            _send(wAmount, _to);\\n        } else {\\n            gOHM.mint(msg.sender, wAmount);\\n        }\\n    }\\n\\n    // send preferred token\\n    function _send(uint256 wAmount, TYPE _to) internal {\\n        if (_to == TYPE.WRAPPED) {\\n            gOHM.safeTransfer(msg.sender, wAmount);\\n        } else if (_to == TYPE.STAKED) {\\n            newStaking.unwrap(msg.sender, wAmount);\\n        } else if (_to == TYPE.UNSTAKED) {\\n            newStaking.unstake(msg.sender, wAmount, false, false);\\n        }\\n    }\\n\\n    // bridge back to OHM, sOHM, or wsOHM\\n    function bridgeBack(uint256 _amount, TYPE _to) external {\\n        if (!ohmMigrated) {\\n            gOHM.burn(msg.sender, _amount);\\n        } else {\\n            gOHM.safeTransferFrom(msg.sender, address(this), _amount);\\n        }\\n\\n        uint256 amount = oldwsOHM.wOHMTosOHM(_amount);\\n        // error throws if contract does not have enough of type to send\\n        if (_to == TYPE.UNSTAKED) {\\n            oldOHM.safeTransfer(msg.sender, amount);\\n        } else if (_to == TYPE.STAKED) {\\n            oldsOHM.safeTransfer(msg.sender, amount);\\n        } else if (_to == TYPE.WRAPPED) {\\n            oldwsOHM.safeTransfer(msg.sender, _amount);\\n        }\\n    }\\n\\n    /* ========== OWNABLE ========== */\\n\\n    // halt migrations (but not bridging back)\\n    function halt() external onlyPolicy {\\n        require(!ohmMigrated, \\\"Migration has occurred\\\");\\n        shutdown = !shutdown;\\n    }\\n\\n    // withdraw backing of migrated OHM\\n    function defund(address reserve) external onlyGovernor {\\n        require(ohmMigrated, \\\"Migration has not begun\\\");\\n        require(timelockEnd < block.number && timelockEnd != 0, \\\"Timelock not complete\\\");\\n\\n        oldwsOHM.unwrap(oldwsOHM.balanceOf(address(this)));\\n\\n        uint256 amountToUnstake = oldsOHM.balanceOf(address(this));\\n        oldsOHM.approve(address(oldStaking), amountToUnstake);\\n        oldStaking.unstake(amountToUnstake, false);\\n\\n        uint256 balance = oldOHM.balanceOf(address(this));\\n\\n        if(balance > oldSupply) {\\n            oldSupply = 0;\\n        } else {\\n            oldSupply -= balance;\\n        }\\n\\n        uint256 amountToWithdraw = balance.mul(1e9);\\n        oldOHM.approve(address(oldTreasury), amountToWithdraw);\\n        oldTreasury.withdraw(amountToWithdraw, reserve);\\n        IERC20(reserve).safeTransfer(address(newTreasury), IERC20(reserve).balanceOf(address(this)));\\n\\n        emit Defunded(balance);\\n    }\\n\\n    // start timelock to send backing to new treasury\\n    function startTimelock() external onlyGovernor {\\n        require(timelockEnd == 0, \\\"Timelock set\\\");\\n        timelockEnd = block.number.add(timelockLength);\\n\\n        emit TimelockStarted(block.number, timelockEnd);\\n    }\\n\\n    // set gOHM address\\n    function setgOHM(address _gOHM) external onlyGovernor {\\n        require(address(gOHM) == address(0), \\\"Already set\\\");\\n        require(_gOHM != address(0), \\\"Zero address: gOHM\\\");\\n\\n        gOHM = IgOHM(_gOHM);\\n    }\\n\\n    // call internal migrate token function\\n    function migrateToken(address token) external onlyGovernor {\\n        _migrateToken(token, false);\\n    }\\n\\n    /**\\n     *   @notice Migrate LP and pair with new OHM\\n     */\\n    function migrateLP(\\n        address pair,\\n        bool sushi,\\n        address token,\\n        uint256 _minA,\\n        uint256 _minB\\n    ) external onlyGovernor {\\n        uint256 oldLPAmount = IERC20(pair).balanceOf(address(oldTreasury));\\n        oldTreasury.manage(pair, oldLPAmount);\\n\\n        IUniswapV2Router router = sushiRouter;\\n        if (!sushi) {\\n            router = uniRouter;\\n        }\\n\\n        IERC20(pair).approve(address(router), oldLPAmount);\\n        (uint256 amountA, uint256 amountB) = router.removeLiquidity(\\n            token, \\n            address(oldOHM), \\n            oldLPAmount,\\n            _minA, \\n            _minB, \\n            address(this), \\n            block.timestamp\\n        );\\n\\n        newTreasury.mint(address(this), amountB);\\n\\n        IERC20(token).approve(address(router), amountA);\\n        newOHM.approve(address(router), amountB);\\n\\n        router.addLiquidity(\\n            token, \\n            address(newOHM), \\n            amountA, \\n            amountB, \\n            amountA, \\n            amountB, \\n            address(newTreasury), \\n            block.timestamp\\n        );\\n    }\\n\\n    // Failsafe function to allow owner to withdraw funds sent directly to contract in case someone sends non-ohm tokens to the contract\\n    function withdrawToken(\\n        address tokenAddress,\\n        uint256 amount,\\n        address recipient\\n    ) external onlyGovernor {\\n        require(tokenAddress != address(0), \\\"Token address cannot be 0x0\\\");\\n        require(tokenAddress != address(gOHM), \\\"Cannot withdraw: gOHM\\\");\\n        require(tokenAddress != address(oldOHM), \\\"Cannot withdraw: old-OHM\\\");\\n        require(tokenAddress != address(oldsOHM), \\\"Cannot withdraw: old-sOHM\\\");\\n        require(tokenAddress != address(oldwsOHM), \\\"Cannot withdraw: old-wsOHM\\\");\\n        require(amount > 0, \\\"Withdraw value must be greater than 0\\\");\\n        if (recipient == address(0)) {\\n            recipient = msg.sender; // if no address is specified the value will will be withdrawn to Owner\\n        }\\n\\n        IERC20 tokenContract = IERC20(tokenAddress);\\n        uint256 contractBalance = tokenContract.balanceOf(address(this));\\n        if (amount > contractBalance) {\\n            amount = contractBalance; // set the withdrawal amount equal to balance within the account.\\n        }\\n        // transfer the token from address of this contract\\n        tokenContract.safeTransfer(recipient, amount);\\n    }\\n\\n    // migrate contracts\\n    function migrateContracts(\\n        address _newTreasury,\\n        address _newStaking,\\n        address _newOHM,\\n        address _newsOHM,\\n        address _reserve\\n    ) external onlyGovernor {\\n        require(!ohmMigrated, \\\"Already migrated\\\");\\n        ohmMigrated = true;\\n        shutdown = false;\\n\\n        require(_newTreasury != address(0), \\\"Zero address: Treasury\\\");\\n        newTreasury = ITreasury(_newTreasury);\\n        require(_newStaking != address(0), \\\"Zero address: Staking\\\");\\n        newStaking = IStaking(_newStaking);\\n        require(_newOHM != address(0), \\\"Zero address: OHM\\\");\\n        newOHM = IERC20(_newOHM);\\n\\n        oldSupply = oldOHM.totalSupply(); // log total supply at time of migration\\n\\n        gOHM.migrate(_newStaking, _newsOHM); // change gOHM minter\\n\\n        _migrateToken(_reserve, true); // will deposit tokens into new treasury so reserves can be accounted for\\n\\n        _fund(oldsOHM.circulatingSupply()); // fund with current staked supply for token migration\\n\\n        emit Migrated(_newStaking, _newTreasury);\\n    }\\n\\n    /* ========== INTERNAL FUNCTIONS ========== */\\n\\n    // fund contract with gOHM\\n    function _fund(uint256 _amount) internal {\\n        newTreasury.mint(address(this), _amount);\\n        newOHM.approve(address(newStaking), _amount);\\n        newStaking.stake(address(this), _amount, false, true); // stake and claim gOHM\\n\\n        emit Funded(_amount);\\n    }\\n\\n    /**\\n     *   @notice Migrate token from old treasury to new treasury\\n     */\\n    function _migrateToken(address token, bool deposit) internal {\\n        uint256 balance = IERC20(token).balanceOf(address(oldTreasury));\\n\\n        uint256 excessReserves = oldTreasury.excessReserves();\\n        uint256 tokenValue = oldTreasury.valueOf(token, balance);\\n\\n        if (tokenValue > excessReserves) {\\n            tokenValue = excessReserves;\\n            balance = excessReserves * 10**9;\\n        }\\n\\n        oldTreasury.manage(token, balance);\\n\\n        if (deposit) {\\n            IERC20(token).safeApprove(address(newTreasury), balance);\\n            newTreasury.deposit(balance, token, tokenValue);\\n        } else {\\n            IERC20(token).safeTransfer(address(newTreasury), balance);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa93ce927677dca0c0d689b433552a3ac68f0adc92b6799620d431d51af8516dc\",\"license\":\"AGPL-3.0\"},\"contracts/types/OlympusAccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity >=0.7.5;\\n\\nimport \\\"../interfaces/IOlympusAuthority.sol\\\";\\n\\nabstract contract OlympusAccessControlled {\\n\\n    /* ========== EVENTS ========== */\\n\\n    event AuthorityUpdated(IOlympusAuthority indexed authority);\\n\\n    string UNAUTHORIZED = \\\"UNAUTHORIZED\\\"; // save gas\\n\\n    /* ========== STATE VARIABLES ========== */\\n\\n    IOlympusAuthority public authority;\\n\\n\\n    /* ========== Constructor ========== */\\n\\n    constructor(IOlympusAuthority _authority) {\\n        authority = _authority;\\n        emit AuthorityUpdated(_authority);\\n    }\\n    \\n\\n    /* ========== MODIFIERS ========== */\\n    \\n    modifier onlyGovernor() {\\n        require(msg.sender == authority.governor(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    modifier onlyGuardian() {\\n        require(msg.sender == authority.guardian(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    modifier onlyPolicy() {\\n        require(msg.sender == authority.policy(), UNAUTHORIZED);\\n        _;\\n    }\\n\\n    modifier onlyVault() {\\n        require(msg.sender == authority.vault(), UNAUTHORIZED);\\n        _;\\n    }\\n    \\n    /* ========== GOV ONLY ========== */\\n    \\n    function setAuthority(IOlympusAuthority _newAuthority) external onlyGovernor {\\n        authority = _newAuthority;\\n        emit AuthorityUpdated(_newAuthority);\\n    }\\n}\\n\",\"keccak256\":\"0x7e7c74bd79093c0ee40af7bc07622b29930bb60424afbd5689e78cd4e02d3122\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "migrateLP(address,bool,address,uint256,uint256)": {
        "notice": "Migrate LP and pair with new OHM"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12296,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "UNAUTHORIZED",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 12298,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "authority",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOlympusAuthority)6869"
      },
      {
        "astId": 9402,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "gOHM",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IgOHM)7450"
      },
      {
        "astId": 9404,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "newTreasury",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ITreasury)7143"
      },
      {
        "astId": 9406,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "newStaking",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IStaking)6975"
      },
      {
        "astId": 9408,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "newOHM",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)6708"
      },
      {
        "astId": 9410,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "ohmMigrated",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 9412,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "shutdown",
        "offset": 21,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 9416,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "timelockEnd",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 9418,
        "contract": "contracts/migration/OlympusTokenMigrator.sol:OlympusTokenMigrator",
        "label": "oldSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)6708": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IOlympusAuthority)6869": {
        "encoding": "inplace",
        "label": "contract IOlympusAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(IStaking)6975": {
        "encoding": "inplace",
        "label": "contract IStaking",
        "numberOfBytes": "20"
      },
      "t_contract(ITreasury)7143": {
        "encoding": "inplace",
        "label": "contract ITreasury",
        "numberOfBytes": "20"
      },
      "t_contract(IgOHM)7450": {
        "encoding": "inplace",
        "label": "contract IgOHM",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}